amlModuleIdentifier:
  namespace: microsoft.com/aml/samples
  moduleName: "MPI Train"
  moduleVersion: 0.0.6
jobType: Mpi
description: A dummy module to show how to describe MPI module with custom module spec.
inputs:
- name: training_data
  type:
  - AnyFile
  - AnyDirectory
  description: Training data organized in the torchvision format/structure
- name: max_epochs
  type: Integer
  description: Maximum number of epochs for the training
- name: learning_rate
  type: Float
  default: 0.01
  description: Learning rate, default is 0.01
- name: run_for_minutes
  type: Integer
  default: 5
  description: How many minutes to run this sample module
outputs:
- name: model_output
  type: AnyFile
  description: The output model (zipped)
implementation:
  container:
    amlEnvironment:
      docker:
        baseImage: mcr.microsoft.com/azureml/base-gpu:openmpi3.1.2-cuda10.0-cudnn7-ubuntu18.04
      python:
        condaDependencies:
          name: project_environment
          channels:
            - defaults
          dependencies:
            - python=3.6.8
            - pip:
              - azureml-sdk
              - torch
              - horovod[pytorch]
              - psutil
              - GPUtil
    command: [/opt/miniconda/envs/amlbert/bin/python, mpi_train.py]
    args: [
      --training_data, {inputPath: training_data},
      --max_epochs, {inputValue: max_epochs},
      --learning_rate, {inputValue: learning_rate},
      --model_output, {outputPath: model_output},
      --run_for_minutes, {inputValue: run_for_minutes}
    ]